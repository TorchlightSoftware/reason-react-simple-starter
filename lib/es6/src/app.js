// Generated by BUCKLESCRIPT VERSION 1.10.3, PLEASE EDIT WITH CARE
'use strict';

import * as Block       from "bs-platform/lib/es6/block.js";
import * as Curry       from "bs-platform/lib/es6/curry.js";
import * as React       from "react";
import * as ReasonReact from "reason-react/lib/es6/src/reasonReact.js";

var component = ReasonReact.reducerComponent("MyCounter");

function make() {
  var newrecord = component.slice();
  newrecord[/* didMount */4] = (function (self) {
      self[/* state */4][/* timerId */1][0] = /* Some */[setInterval(Curry._1(self[/* reduce */3], (function () {
                    return /* Tick */0;
                  })), 1000)];
      return /* NoUpdate */0;
    });
  newrecord[/* render */9] = (function (param) {
      var match = param[/* state */4];
      var time = match[/* time */0];
      var match$1 = +(time === 1);
      var timesMessage = match$1 !== 0 ? "second" : "seconds";
      var timeMessage = "You\'ve spent " + (String(time) + (" " + (String(timesMessage) + " on this page")));
      var counterMessage = "You\'ve clicked the button: " + (String(match[/* count */2]) + "");
      return React.createElement("div", undefined, React.createElement("button", {
                      onClick: Curry._1(param[/* reduce */3], (function () {
                              return /* Click */1;
                            }))
                    }, "Click"), React.createElement("p", undefined, timeMessage), React.createElement("p", undefined, counterMessage));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* time */0,
              /* timerId */[/* None */0],
              /* count */0
            ];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      if (action !== 0) {
        var oldCount = state[/* count */2];
        var newCount = oldCount + 1 | 0;
        return /* UpdateWithSideEffects */Block.__(3, [
                  /* record */[
                    /* time */state[/* time */0],
                    /* timerId */state[/* timerId */1],
                    /* count */newCount
                  ],
                  (function (param) {
                      alert("Updating counter to " + (String(param[/* state */4][/* count */2]) + ""));
                      return /* () */0;
                    })
                ]);
      } else {
        return /* Update */Block.__(0, [/* record */[
                    /* time */state[/* time */0] + 1 | 0,
                    /* timerId */state[/* timerId */1],
                    /* count */state[/* count */2]
                  ]]);
      }
    });
  return newrecord;
}

export {
  component ,
  make      ,
  
}
/* component Not a pure module */
